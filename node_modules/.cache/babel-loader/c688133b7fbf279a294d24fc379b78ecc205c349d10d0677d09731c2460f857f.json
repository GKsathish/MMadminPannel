{"ast":null,"code":"\n\n// import React, { createContext, useState, useEffect, useContext } from 'react';\n\n// const AuthContext = createContext();\n\n// export const useAuth = () => {\n//   return useContext(AuthContext);\n// };\n\n// export const AuthProvider = ({ children }) => {\n//   // Initialize `isLoggedIn` from `localStorage`\n//   const [isLoggedIn, setIsLoggedIn] = useState(\n//     localStorage.getItem('isLoggedIn') === 'true'\n//   );\n\n//   useEffect(() => {\n//     localStorage.setItem('isLoggedIn', isLoggedIn);\n//   }, [isLoggedIn]);\n\n//   const login = () => {\n//     setIsLoggedIn(true);\n//   };\n\n//   const logout = () => {\n//     setIsLoggedIn(false);\n//   };\n\n//   return (\n//     <AuthContext.Provider value={{ isLoggedIn, login, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };","map":{"version":3,"names":[],"sources":["/home/sathish/Desktop/PROJECTS/OFFICE/zingplay and mmbackend/mmadmin/admin-app/src/Context/AuthContext.jsx"],"sourcesContent":["\n\n// import React, { createContext, useState, useEffect, useContext } from 'react';\n\n// const AuthContext = createContext();\n\n// export const useAuth = () => {\n//   return useContext(AuthContext);\n// };\n\n// export const AuthProvider = ({ children }) => {\n//   // Initialize `isLoggedIn` from `localStorage`\n//   const [isLoggedIn, setIsLoggedIn] = useState(\n//     localStorage.getItem('isLoggedIn') === 'true'\n//   );\n\n//   useEffect(() => {\n//     localStorage.setItem('isLoggedIn', isLoggedIn);\n//   }, [isLoggedIn]);\n\n//   const login = () => {\n//     setIsLoggedIn(true);\n//   };\n\n//   const logout = () => {\n//     setIsLoggedIn(false);\n//   };\n\n//   return (\n//     <AuthContext.Provider value={{ isLoggedIn, login, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n"],"mappings":";;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}